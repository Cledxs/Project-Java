/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventanas;

import javax.swing.ImageIcon;
import javax.swing.JButton;

/**
 *
 * @author CLAUDIO
 */
public class VentanaPrincipal extends javax.swing.JFrame {
    private boolean casilla[][]= new boolean [3][3];
    private String turno ="usuario1";
    private int matriz[][]= new int[3][3];
    private String usuario1,usuario2;

    public VentanaPrincipal(String usuario1, String usuario2) {
        
        
       initComponents();
       this.setSize(600, 600);
       this.setLocationRelativeTo(null);
       
       llenarCasillas();
       llenarMatriz();
       
       this.usuario1=usuario1;
       this.usuario2=usuario2;
       

    }
    
    private void llenarCasillas(){
        for (int i=0;i<3;i++){
            for (int j=0;j<3;j++){
                casilla[i][j]= true;
            }
        }
    }
    
    private void llenarMatriz(){
        for (int i=0;i<3;i++){
            for (int j=0;j<3;j++){
                matriz[i][j]= 0;
            }
        }        
    }
    
    private void dibujarX(JButton boton){
        boton.setIcon(new ImageIcon(getClass().getResource("/imagenes/equis.png")));
    }
    
    private void dibujarO(JButton boton){
        boton.setIcon(new ImageIcon(getClass().getResource("/imagenes/ciculo.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        botonArribaIzquierda = new javax.swing.JButton();
        botonArriba = new javax.swing.JButton();
        botonArribaDerecha = new javax.swing.JButton();
        botonIzquierda = new javax.swing.JButton();
        botonCentro = new javax.swing.JButton();
        botonDerecha = new javax.swing.JButton();
        botonAbajoIzquierda = new javax.swing.JButton();
        botonAbajo = new javax.swing.JButton();
        botonAbajoDerecho = new javax.swing.JButton();
        barraMenu = new javax.swing.JMenuBar();
        menuJuego = new javax.swing.JMenu();
        comenzarDenuevo = new javax.swing.JMenuItem();
        mostrarResultados = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        salir = new javax.swing.JMenuItem();
        menuAyuda = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel.setLayout(new java.awt.GridLayout(3, 3));

        botonArribaIzquierda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonArribaIzquierdaActionPerformed(evt);
            }
        });
        panel.add(botonArribaIzquierda);

        botonArriba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonArribaActionPerformed(evt);
            }
        });
        panel.add(botonArriba);

        botonArribaDerecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonArribaDerechaActionPerformed(evt);
            }
        });
        panel.add(botonArribaDerecha);

        botonIzquierda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonIzquierdaActionPerformed(evt);
            }
        });
        panel.add(botonIzquierda);

        botonCentro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCentroActionPerformed(evt);
            }
        });
        panel.add(botonCentro);

        botonDerecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDerechaActionPerformed(evt);
            }
        });
        panel.add(botonDerecha);

        botonAbajoIzquierda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAbajoIzquierdaActionPerformed(evt);
            }
        });
        panel.add(botonAbajoIzquierda);

        botonAbajo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAbajoActionPerformed(evt);
            }
        });
        panel.add(botonAbajo);

        botonAbajoDerecho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAbajoDerechoActionPerformed(evt);
            }
        });
        panel.add(botonAbajoDerecho);

        menuJuego.setText("Juego");
        menuJuego.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N

        comenzarDenuevo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        comenzarDenuevo.setText("Comenzar de nuevo");
        menuJuego.add(comenzarDenuevo);

        mostrarResultados.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        mostrarResultados.setText("Mostrar resultados");
        mostrarResultados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarResultadosActionPerformed(evt);
            }
        });
        menuJuego.add(mostrarResultados);
        menuJuego.add(jSeparator1);

        salir.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });
        menuJuego.add(salir);

        barraMenu.add(menuJuego);

        menuAyuda.setText("Ayuda");
        menuAyuda.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        barraMenu.add(menuAyuda);

        setJMenuBar(barraMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
     System.exit(0);
    }//GEN-LAST:event_salirActionPerformed

    private void botonArribaIzquierdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonArribaIzquierdaActionPerformed
    if(casilla[0][0]==true){
        if(turno.equals("usuario1")){
            dibujarX(botonArribaIzquierda);
            turno="usuario2";
            matriz[0][0]= 1;
        }
        else {
            dibujarO(botonArribaIzquierda);
            turno="usuario1";
            matriz[0][0]= 2;
        }
        casilla[0][0]=false;
        comprobarGanador();
    }
    }//GEN-LAST:event_botonArribaIzquierdaActionPerformed

    private void botonArribaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonArribaActionPerformed
     if (casilla[0][1]==true){
         if(turno.equals("usuario1")){
             dibujarX(botonArriba);
             turno ="usuario2";
             matriz[0][1]= 1;
         }
         else {
           dibujarO(botonArriba);
            turno="usuario1";  
            matriz[0][1]= 2;
         }
         casilla[0][1]=false;
         comprobarGanador();
     }
    }//GEN-LAST:event_botonArribaActionPerformed

    private void botonArribaDerechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonArribaDerechaActionPerformed
     if (casilla[0][2]==true){
        if(turno.equals("usuario1")){
             dibujarX(botonArribaDerecha);
             turno ="usuario2";
             matriz[0][2]= 1;
         }
         else {
           dibujarO(botonArribaDerecha);
            turno="usuario1";  
            matriz[0][2]= 2;
         }
         casilla[0][2]=false;
         comprobarGanador();
     }
    }//GEN-LAST:event_botonArribaDerechaActionPerformed

    private void botonIzquierdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonIzquierdaActionPerformed
      if (casilla[1][0]==true){
          if(turno.equals("usuario1")){
             dibujarX(botonIzquierda);
             turno ="usuario2";
             matriz[1][0]= 1;
         }
         else {
           dibujarO(botonIzquierda);
            turno="usuario1"; 
            matriz[1][0]= 2;
         }
         casilla[1][0]=false; 
         comprobarGanador();
      }
    }//GEN-LAST:event_botonIzquierdaActionPerformed

    private void botonCentroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCentroActionPerformed
      if (casilla[1][1]==true){
          if(turno.equals("usuario1")){
             dibujarX(botonCentro);
             turno ="usuario2";
             matriz[1][1]= 1;
         }
         else {
           dibujarO(botonCentro);
            turno="usuario1"; 
            matriz[1][1]= 2;
         }
         casilla[1][1]=false; 
         comprobarGanador();
      }
    }//GEN-LAST:event_botonCentroActionPerformed

    private void botonDerechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDerechaActionPerformed
      if (casilla[1][2]==true){
          if(turno.equals("usuario1")){
             dibujarX(botonDerecha);
             turno ="usuario2";
             matriz[1][2]= 1;
         }
         else {
           dibujarO(botonDerecha);
            turno="usuario1";  
            matriz[1][2]= 1;
         }
         casilla[1][2]=false; 
         comprobarGanador();
      }
    }//GEN-LAST:event_botonDerechaActionPerformed

    private void botonAbajoIzquierdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAbajoIzquierdaActionPerformed
      if (casilla[2][0]==true){
          if(turno.equals("usuario1")){
             dibujarX(botonAbajoIzquierda);
             turno ="usuario2";
             matriz[2][0]= 1;
         }
         else {
           dibujarO(botonAbajoIzquierda);
            turno="usuario1";  
            matriz[2][0]= 2;
         }
         casilla[2][0]=false; 
         comprobarGanador();
      }   
    }//GEN-LAST:event_botonAbajoIzquierdaActionPerformed

    private void botonAbajoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAbajoActionPerformed
      if (casilla[2][1]==true){
          if(turno.equals("usuario1")){
             dibujarX(botonAbajo);
             turno ="usuario2";
             matriz[2][1]= 1;
         }
         else {
           dibujarO(botonAbajo);
            turno="usuario1";  
            matriz[2][1]= 2;
         }
         casilla[2][1]=false;
         comprobarGanador();
      }   
    }//GEN-LAST:event_botonAbajoActionPerformed

    private void botonAbajoDerechoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAbajoDerechoActionPerformed
      if (casilla[2][2]==true){
          if(turno.equals("usuario1")){
             dibujarX(botonAbajoDerecho);
             turno ="usuario2";
             matriz[2][2]= 1;
         }
         else {
           dibujarO(botonAbajoDerecho);
            turno="usuario1"; 
            matriz[2][2]= 2;
         }
         casilla[2][2]=false; 
         comprobarGanador();
      } 
    }//GEN-LAST:event_botonAbajoDerechoActionPerformed

    private void mostrarResultadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarResultadosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mostrarResultadosActionPerformed

    private void comprobarGanador(){
        boolean ganador1=false;
        boolean ganador2=false;
        int casillasEmpate = 0;
        
        ganador1 = comprobar(1);
        
        ganador2 = comprobar(2);
        
        if(ganador1==true){
            System.out.println("El ganador es: "+usuario1);
            reiniciarJuego();
        }
        else if (ganador2==true){
            System.out.println("El ganador es: "+usuario2);
            reiniciarJuego();
        }
        else{
            for (int i=0;i<3;i++){
                for(int j =0; j<3;j++){
                    if (matriz [i][j]!=0){
                        casillasEmpate++;
                    }
                }
            }
            if(casillasEmpate==9){
                 System.out.println("Empate");
                 reiniciarJuego();
            }
            else{
                casillasEmpate=0;
            }
           
            
        }
    }
    
    private boolean comprobar(int num){
        boolean ganador=false;
        if(matriz[0][0]==num && matriz[0][1]==num && matriz[0][2]==num){
            ganador = true;
        }
        else if (matriz[1][0]==num && matriz[1][1]==num && matriz[1][2]==num){
            ganador = true;
        }
        else if (matriz[2][0]==num && matriz[2][1]==num && matriz[2][2]==num){
            ganador = true;
        } 
        else if (matriz[0][0]==num && matriz[1][0]==num && matriz[2][0]==num){
            ganador = true;
        } 
        else if (matriz[0][1]==num && matriz[1][1]==num && matriz[2][1]==num){
            ganador = true;
        }
        else if (matriz[0][2]==num && matriz[1][2]==num && matriz[2][2]==num){
            ganador = true;
        }
        else if (matriz[0][0]==num && matriz[1][1]==num && matriz[2][2]==num){
            ganador = true;
        }
        else if (matriz[2][0]==num && matriz[1][1]==num && matriz[0][2]==num){
            ganador = true;
        }  
        return ganador;
    }
    
    private void reiniciarJuego(){
      llenarCasillas();
      llenarMatriz();
      
      botonArribaIzquierda.setIcon(null);
      botonArriba.setIcon(null);
      botonArribaDerecha.setIcon(null);
      botonIzquierda.setIcon(null);
      botonCentro.setIcon(null);
      botonDerecha.setIcon(null);
      botonAbajoIzquierda.setIcon(null);
      botonAbajo.setIcon(null);
      botonAbajoDerecho.setIcon(null);
      
      
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal(null,null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar barraMenu;
    private javax.swing.JButton botonAbajo;
    private javax.swing.JButton botonAbajoDerecho;
    private javax.swing.JButton botonAbajoIzquierda;
    private javax.swing.JButton botonArriba;
    private javax.swing.JButton botonArribaDerecha;
    private javax.swing.JButton botonArribaIzquierda;
    private javax.swing.JButton botonCentro;
    private javax.swing.JButton botonDerecha;
    private javax.swing.JButton botonIzquierda;
    private javax.swing.JMenuItem comenzarDenuevo;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenu menuAyuda;
    private javax.swing.JMenu menuJuego;
    private javax.swing.JMenuItem mostrarResultados;
    private javax.swing.JPanel panel;
    private javax.swing.JMenuItem salir;
    // End of variables declaration//GEN-END:variables
}
